##Terminology

* Job: indexed by correlative number and production line.
* Route: indexed by correlative number and vehicle.
* Patient: indexed by correlative number and center.
* Center = Hospital.

##Alternatives

A. two steps: 

1. (re)Assign appointments to routes.
2. (re)Asign production to routes.
3. Iterate.

B. Make time discrete 
    * (model everything at the same time?)
    * P_(t, i) => number of doses produced in timeslot `t` and line `i`.
    * 
    
C. Work with job production: index everything by the job where it was produced.
    
Demand:
* route_job_patient_(r, j, p) => patient `p` is covered by a dose produced in job `j` and transported in route `r`.
    * constraints: radioactivity, times, availability, ...

Transport:
* route_start_time_(r) => time when route `r` starts from production node.
    * vehicle availability.
* route_arc(r, c1, c2) => route `r` passes through `c1` before going to `c2`.
    * constraints: travel times + distances.
* route_arrival_(r, h) => time when route `r` passes through hospital `h`
    * v01RouteHospital_(r, h) => if route `r` passes through hospital `h`.
    * constaints: travel times, start of route.        
    
Production:
* job_start_time_(j) => start (end) time for job `j`.
    * constraints: line availability.
* job_type_(j) => assignment of job to a type.  
    * constraints: job_start, job_end, production, radioactivity, job_used, costs, etc.
* line_used_(l) => if a job is used in a production line, then the production is used
* job_used_(j) => if a job is used, it uses its line and costs time and has a type.

Auxiliar:
* vQTransport_(j, r) => job `j` has X number of doses in route `r`.
    * constraints: start of route.
* v01Demand_(j, p) => patient `p` is covered by a doses from job `j`.
    * constraints: time, route.

##Magnitudes

**Heuristic solution**

* routes: 46
* jobs: 7

It's reasonable to think on potentially 5-10 jobs per line.

**Data**

* patients: 315
* possible pairs of centers: 25

Potential size for:

* route_job_patient: 46 * 7 * 315 = 101 430 vars.
* route_arcs: 1150 vars.

Assumptions:

* routes-hospital clustering: 
    * not every route can visit any hospital.
    * There can be overlapping.
    * if two hospitals are to far away, they do not share a route.
    
* route-job clustering:
    * not every job can be mixed with every route.
    * jobs "at the beginning" should be matched with routes "at the beginning".

* line-job_type:
    * to break simmetry, we want to restrict some of the lines to some of the line types.
    * again, we will allow overlapping.
    * also, if a line has the "slowest" batches pre-assigned, we reduce the number of potential jobs.
    
##Solution

1. Production:
    * start time for each production.
    * type of production.
1. Transport: 
    * route for each vehicle.
    * dosis for each route.
1. Demand satisfaction:
    * production-transport-patient.

    
##Heuristic

* Change the assumption of one line one job type depending on the results.
* Tie two centers in one vehicle, so the solution is at least "feasible".
* Check feasibility, there are some problems when running the tests.